<div class="container mx-auto py-6">
  <div class="flex flex-col md:flex-row justify-between items-center mb-6">
    <h1 class="text-3xl font-bold text-slate-100 mb-4 md:mb-0 flex items-center">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-red-500 info-icon" viewBox="0 0 20 20" fill="currentColor" style="filter: drop-shadow(0 0 3px #f87171);">
        <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
      </svg>
      Jugadores de Smash
    </h1>
    
    <div class="flex space-x-4">
      <%= link_to tournaments_path, 
                class: "inline-flex items-center px-4 py-2 border border-blue-600 text-sm font-medium rounded-md shadow-sm text-blue-400 bg-slate-800 hover:bg-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200 cursor-pointer" do %>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-2" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z" clip-rule="evenodd" />
        </svg>
        Ver Torneos
      <% end %>
    </div>
  </div>

  <div class="mb-6 bg-slate-800 rounded-lg shadow-md border border-slate-600 p-5">
    <%= form_with(url: players_path, method: :get, local: false, data: { controller: "search" }) do |f| %>
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-slate-400" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
          </svg>
        </div>
        <%= f.text_field :query, 
                      value: params[:query], 
                      placeholder: "Buscar jugadores por nombre, entrant name o twitter...", 
                      class: "pl-10 focus:ring-red-500 focus:border-red-500 block w-full shadow-sm text-sm border-slate-600 bg-slate-700 text-slate-200 rounded-md py-3 tracking-wide",
                      autocomplete: "off",
                      data: { 
                        search_target: "input",
                        action: "input->search#inputChanged"
                      } %>
        <% if params[:query].present? %>
          <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
            <%= link_to players_path, class: "text-slate-400 hover:text-slate-300 cursor-pointer" do %>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
              </svg>
            <% end %>
          </div>
        <% end %>
      </div>
      
      <div class="flex items-center mt-2 text-sm text-slate-400">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-2" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
        </svg>
        <span class="text-xs tracking-wide">La búsqueda se realiza automáticamente mientras escribes</span>
      </div>
    <% end %>
  </div>

  <%= turbo_frame_tag "players_results" do %>
    <%= render "players_list", players: @players %>
  <% end %>
</div>

<!-- Modal para editar personajes de Smash (fuera del turbo frame) -->
<div id="smashCharacterModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-[9999] flex items-center justify-center" style="z-index: 9999;">
  <div class="bg-slate-800 rounded-lg shadow-xl border border-slate-600 p-6 w-full max-w-2xl mx-4 relative z-[10000]" style="z-index: 10000;">
    <div class="flex justify-between items-center mb-4">
      <h3 class="text-lg font-semibold text-slate-100">Editar Personajes de Smash</h3>
      <button onclick="closeSmashCharacterModal()" class="text-slate-400 hover:text-slate-200 p-1">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    
    <form id="smashCharacterForm" class="space-y-4">
      <input type="hidden" id="playerId" name="player_id">
      
      <!-- Personaje 1 -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-slate-700 rounded-lg">
        <div>
          <label class="block text-sm font-medium text-slate-200 mb-2">Personaje Principal</label>
          <select id="character_1" name="character_1" class="w-full bg-slate-600 border border-slate-500 text-slate-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
            <option value="">Seleccionar personaje...</option>
            <% smash_character_options.each do |name, key| %>
              <option value="<%= key %>"><%= name %></option>
            <% end %>
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium text-slate-200 mb-2">Skin</label>
          <select id="skin_1" name="skin_1" class="w-full bg-slate-600 border border-slate-500 text-slate-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
            <% smash_skin_options.each do |name, value| %>
              <option value="<%= value %>"><%= name %></option>
            <% end %>
          </select>
        </div>
      </div>
      
      <!-- Personaje 2 -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-slate-700 rounded-lg">
        <div>
          <label class="block text-sm font-medium text-slate-200 mb-2">Personaje Secundario</label>
          <select id="character_2" name="character_2" class="w-full bg-slate-600 border border-slate-500 text-slate-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
            <option value="">Seleccionar personaje...</option>
            <% smash_character_options.each do |name, key| %>
              <option value="<%= key %>"><%= name %></option>
            <% end %>
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium text-slate-200 mb-2">Skin</label>
          <select id="skin_2" name="skin_2" class="w-full bg-slate-600 border border-slate-500 text-slate-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
            <% smash_skin_options.each do |name, value| %>
              <option value="<%= value %>"><%= name %></option>
            <% end %>
          </select>
        </div>
      </div>
      
      <!-- Personaje 3 -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-slate-700 rounded-lg">
        <div>
          <label class="block text-sm font-medium text-slate-200 mb-2">Personaje Terciario</label>
          <select id="character_3" name="character_3" class="w-full bg-slate-600 border border-slate-500 text-slate-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
            <option value="">Seleccionar personaje...</option>
            <% smash_character_options.each do |name, key| %>
              <option value="<%= key %>"><%= name %></option>
            <% end %>
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium text-slate-200 mb-2">Skin</label>
          <select id="skin_3" name="skin_3" class="w-full bg-slate-600 border border-slate-500 text-slate-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
            <% smash_skin_options.each do |name, value| %>
              <option value="<%= value %>"><%= name %></option>
            <% end %>
          </select>
        </div>
      </div>
      
      <div class="flex justify-end space-x-3 pt-4">
        <button type="button" onclick="closeSmashCharacterModal()" class="px-4 py-2 border border-slate-500 text-slate-300 rounded-md hover:bg-slate-700 transition-colors">
          Cancelar
        </button>
        <button type="submit" class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors">
          Guardar Personajes
        </button>
      </div>
    </form>
  </div>
</div>

<script>
// Funciones globales para el modal de personajes de Smash
function openSmashCharacterModal(playerId) {
  console.log("=== Abriendo modal para jugador:", playerId, "===");
  
  // Verificar que el modal existe
  const modal = document.getElementById('smashCharacterModal');
  if (!modal) {
    console.error("❌ Modal no encontrado en el DOM");
    return;
  }
  
  console.log("✅ Modal encontrado:", modal);
  
  // Primero mostrar el modal directamente para verificar que funciona
  document.getElementById('playerId').value = playerId;
  modal.classList.remove('hidden');
  
  console.log("✅ Modal debería estar visible ahora. Classes:", modal.className);
  
  // Luego cargar datos actuales del jugador via AJAX
  fetch(`/players/${playerId}/current_characters`, {
    method: 'GET',
    headers: {
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
      'Accept': 'application/json'
    }
  })
  .then(response => {
    console.log("📡 Respuesta del servidor:", response.status);
    return response.json();
  })
  .then(data => {
    console.log("📦 Datos recibidos:", data);
    if (data.success) {
      // Rellenar formulario con datos actuales
      document.getElementById('character_1').value = data.character_1 || '';
      document.getElementById('skin_1').value = data.skin_1 || '1';
      document.getElementById('character_2').value = data.character_2 || '';
      document.getElementById('skin_2').value = data.skin_2 || '1';
      document.getElementById('character_3').value = data.character_3 || '';
      document.getElementById('skin_3').value = data.skin_3 || '1';
      console.log("✅ Formulario rellenado con datos del servidor");
    } else {
      console.warn("⚠️ Error cargando datos, usando valores por defecto:", data.error);
    }
  })
  .catch(error => {
    console.error('❌ Error cargando datos del jugador:', error);
  });
}

function closeSmashCharacterModal() {
  document.getElementById('smashCharacterModal').classList.add('hidden');
}

// Evento del formulario (usando delegación para funcionar con turbo)
document.addEventListener('submit', function(e) {
  if (e.target.id === 'smashCharacterForm') {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const playerId = formData.get('player_id');
    
    // Enviar datos via AJAX con Turbo Stream para actualización automática
    fetch(`/players/${playerId}/update_smash_characters`, {
      method: 'PATCH',
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
        'Accept': 'text/vnd.turbo-stream.html',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        character_1: formData.get('character_1'),
        skin_1: formData.get('skin_1'),
        character_2: formData.get('character_2'),
        skin_2: formData.get('skin_2'),
        character_3: formData.get('character_3'),
        skin_3: formData.get('skin_3')
      })
    })
    .then(response => {
      if (response.headers.get('Content-Type')?.includes('turbo-stream')) {
        // Es una respuesta turbo-stream, procesarla
        return response.text().then(html => {
          closeSmashCharacterModal();
          console.log("✅ Personajes actualizados con Turbo Stream");
          
          // Turbo procesará automáticamente la respuesta
          Turbo.renderStreamMessage(html);
          return { success: true };
        });
      } else {
        // Es una respuesta JSON (fallback)
        return response.json();
      }
    })
    .then(data => {
      if (data.success) {
        // Ya manejado arriba para turbo-stream
        if (!data.turbo_stream_processed) {
          closeSmashCharacterModal();
          console.log("✅ Personajes actualizados con JSON fallback");
          
          // Fallback: recargar turbo frame manualmente
          const turboFrame = document.getElementById('players_results');
          if (turboFrame) {
            const currentSrc = turboFrame.getAttribute('src') || window.location.pathname;
            const url = new URL(currentSrc, window.location.origin);
            url.searchParams.set('_reload', Date.now());
            
            const searchParams = new URLSearchParams(window.location.search);
            if (searchParams.get('query')) {
              url.searchParams.set('query', searchParams.get('query'));
            }
            
            turboFrame.setAttribute('src', url.toString());
            console.log("🔄 Recargando turbo frame con URL:", url.toString());
          } else {
            console.log("⚠️ Turbo frame no encontrado, recargando página completa");
            window.location.reload();
          }
        }
      } else {
        alert('Error al guardar los personajes: ' + (data.error || 'Error desconocido'));
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error al guardar los personajes');
    });
  }
});

// Cerrar modal al hacer clic fuera de él
document.addEventListener('click', function(e) {
  const modal = document.getElementById('smashCharacterModal');
  if (e.target === modal) {
    closeSmashCharacterModal();
  }
});

// Cerrar modal con tecla Escape
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    closeSmashCharacterModal();
  }
});
</script>

<style>
/* Estilos personalizados para los selects del modal */
#smashCharacterModal select {
  background-color: #475569 !important; /* slate-600 */
  color: #f1f5f9 !important; /* slate-100 */
  border-color: #64748b !important; /* slate-500 */
}

#smashCharacterModal select:focus {
  background-color: #475569 !important;
  border-color: #ef4444 !important; /* red-500 */
  box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.2) !important;
}

#smashCharacterModal select option {
  background-color: #475569 !important; /* slate-600 */
  color: #f1f5f9 !important; /* slate-100 */
  padding: 8px !important;
}

#smashCharacterModal select option:hover,
#smashCharacterModal select option:checked {
  background-color: #334155 !important; /* slate-700 */
  color: #f1f5f9 !important;
}

/* Mejorar contraste de labels */
#smashCharacterModal label {
  color: #f1f5f9 !important; /* slate-100 */
  font-weight: 500 !important;
}

/* Estilo para iconos de personajes más suave */
.smash-character-icon {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.smash-character-icon:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}
</style> 